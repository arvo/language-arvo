fileTypes: [
  "arvo"
]
name: "Arvo"
patterns: [
  {
    include: "#comments"
  }
  {
    include: "#escape"
  }
  {
    match: "\\b(self|Self)\\b"
    name: "variable.language.arvo"
  }
  {
    match: "\\b(as|box|deref|else|extern|for|if|import|in|is|let|match|module|mut|mutex|new|ptr|public|ref|select|sync|then|when)\\b"
    name: "keyword.control.arvo"
  }
  {
    match: "\\b(i8|i16|i32|i64|f32|f64|bool|char|string|void)\\b"
    name: "storage.type.arvo"
  }
  {
    match: "\\b([0-9]+\\.[0-9]+|[0-9]+)\\b"
    name: "constant.numeric.arvo"
  }
  {
    match: "\\b(false|true)\\b"
    name: "constant.bool.arvo"
  }
  {
    match: "(\\+|\\-|\\*|\\/|\\->)"
    name: "keyword.operator.arvo"
  }
  {
    comment: "String literal"
    name: "string.quoted.double.arvo"
    begin: "b?\""
    end: "\""
    patterns: [{
        include: "#escape"
    }]
  }
  {
    comment: "Function declaration"
    match: "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\("
    captures: {
      "1": { name: "keyword.control.arvo" }
      "2": { name: "entity.name.function.arvo" }
    }
  }
  {
    comment: "Operator declaration"
    match: "\\b(fn)\\s+(\\+|\\+=|\\-|\\-=|\\*|\\*=|\\/|\\/=)\\("
    captures: {
      "1": { name: "keyword.control.arvo" }
      "2": { name: "keyword.operator.arvo" }
    }
  }
  {
    comment: "Type and interface declaration"
    match: "\\b(implement|interface|type)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
    captures: {
      "1": { name: "keyword.control.arvo" }
      "2": { name: "entity.name.type.arvo" }
    }
  }
  {
    comment: "Function call"
    match: "\\b([a-zA-Z0-9_][a-zA-Z0-9_]*)\\s*\\("
    captures: {
      "1": { name: "entity.name.function.arvo" }
    }
  }
]
repository:
  comments:
    patterns: [
      {
        begin: "//"
        end: "$\\n?"
        name: "comment.line.double-slash.arvo"
      }
    ]
  escape:
    patterns: [
      {
        match: "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        name: "constant.character.escape.arvo"
      }
    ]
scopeName: "source.arvo"
